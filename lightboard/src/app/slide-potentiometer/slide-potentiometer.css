:host {
  display: inline-flex;
  position: relative;
  flex-direction: column;
  align-items: center;
  padding: 10px;
  padding-top: 25px;
  border: 1px solid var(--slider-host-border-color);
  border-radius: 4px;
  min-width: 60px;
  background-color: var(--slider-host-bg-color);
}

.channel-info {
  position: absolute;
  top: 2px;
  left: 3px;
  padding: 0;
  z-index: 1;
}

.channel-info h3 {
  margin: 0;
  font-size: 0.9em;
  font-weight: bold;
  color: var(--slider-text-color);
  line-height: 1;
}

input[type="range"] { /* Selector changed, orient attribute removed from HTML */
  -webkit-appearance: none; /* Remove default WebKit appearance */
  appearance: none; /* Remove default appearance */

  writing-mode: vertical-lr;
  direction: rtl;

  /* Dimensions: input's height is now its visual length, width is its thickness. */
  /* Height (length) is set dynamically by [style.height]="sliderHeight" from component TS */
  width: 20px; /* This is the thickness of the slider input area */

  margin-top: 0;
  margin-bottom: 10px;
  background: transparent; /* To show custom track */
  padding: 0;
  cursor: grab;
}

/* Vertical Slider Track */
input[type="range"]::-webkit-slider-runnable-track {
  width: 8px; /* Thickness of the track */
  height: 100%; /* Length of the track */
  background: var(--slider-track-color, #ddd);
  border-radius: 4px;
  border: 1px solid var(--slider-track-border-color, #ccc);
  margin: 0 auto; /* Center the track within the input's thickness */
}

input[type="range"]::-moz-range-track {
  width: 8px; /* Thickness of the track */
  height: 100%; /* Length of the track */
  background: var(--slider-track-color, #ddd);
  border-radius: 4px;
  border: 1px solid var(--slider-track-border-color, #ccc);
  margin: 0 auto; /* Center the track */
}

/* Vertical Slider Thumb */
input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  /* With writing-mode: vertical-lr, width is along the track, height is thickness */
  width: 20px;  /* Thumb's dimension ALONG the track (visual height of handle) */
  height: 26px; /* Thumb's dimension ACROSS the track (visual width/thickness of handle) */
  background: var(--slider-thumb-color, #3498db);
  border-radius: 3px;
  cursor: grab;
  margin-left: -9px; /* (TrackThickness 8px - ThumbThickness 26px) / 2 = -9px */
  /* Bevel border */
  border-width: 1px;
  border-style: solid;
  border-top-color: var(--slider-thumb-bevel-highlight);
  border-left-color: var(--slider-thumb-bevel-highlight);
  border-bottom-color: var(--slider-thumb-bevel-shadow);
  border-right-color: var(--slider-thumb-bevel-shadow);
}

input[type="range"]::-moz-range-thumb {
  width: 20px;  /* Length of the thumb along the track */
  height: 26px; /* Thickness of the thumb across the track */
  background: var(--slider-thumb-color, #3498db);
  border-radius: 3px;
  cursor: grab;
  margin-left: -9px; /* (TrackThickness 8px - ThumbThickness 26px) / 2 = -9px */
  /* Bevel border */
  border-width: 1px;
  border-style: solid;
  border-top-color: var(--slider-thumb-bevel-highlight);
  border-left-color: var(--slider-thumb-bevel-highlight);
  border-bottom-color: var(--slider-thumb-bevel-shadow);
  border-right-color: var(--slider-thumb-bevel-shadow);
}

/* Dark Theme adjustments for vertical sliders (Track and Thumb) */
/* Thumb border colors will use the dark theme variables for bevel directly */
:host-context(body.dark-theme) input[type="range"]::-webkit-slider-runnable-track {
  background: var(--slider-track-color-dark, #555);
  border-color: var(--slider-track-border-color-dark, #444);
}
:host-context(body.dark-theme) input[type="range"]::-moz-range-track {
  background: var(--slider-track-color-dark, #555);
  border-color: var(--slider-track-border-color-dark, #444);
}
:host-context(body.dark-theme) input[type="range"]::-webkit-slider-thumb {
  background: var(--slider-thumb-color-dark, #5dade2);
  border-color: var(--slider-thumb-border-color-dark, #4a90c2);
}
:host-context(body.dark-theme) input[type="range"]::-moz-range-thumb {
  background: var(--slider-thumb-color-dark, #5dade2);
  border-color: var(--slider-thumb-border-color-dark, #4a90c2);
}

/* Preserved styles for value display and color input */
.value-display-container {
  position: relative;
  min-width: 50px;
  height: 28px;
  text-align: center;
  width: 100%;
  box-sizing: border-box;
}

.value-text {
  cursor: pointer;
  display: block;
  padding: 5px;
  border: 1px solid transparent;
  line-height: 1.5;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  border-radius: 3px;
  color: var(--slider-text-color);
}

.value-edit-input {
  border: 1px solid var(--slider-value-edit-border-color);
  background-color: var(--app-bg-color);
  padding: 4px;
  font-family: inherit;
  font-size: inherit;
  color: var(--app-text-color);
  text-align: center;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  position: absolute;
  top: 0;
  left: 0;
  border-radius: 3px;
}

.value-edit-input::-webkit-outer-spin-button,
.value-edit-input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

.value-edit-input[type=number] {
  -moz-appearance: textfield;
}

.color-display-area {
  margin-top: 10px;
  display: flex;
  justify-content: center;
}

.color-input-native {
  width: 40px;
  height: 20px;
  border: 1px solid var(--slider-color-swatch-border-color);
  padding: 0;
  cursor: pointer;
  background-color: transparent;
}

.slider-wrapper {
  position: relative;
  display: flex;
  align-items: center;
  /* The input[type=range] has margin-bottom: 10px, which provides space below this wrapper */
  /* The height of this wrapper will be determined by the sliderHeight for the input and tick-marks-container */
}

.tick-marks-container {
  display: flex;
  flex-direction: column; /* Arrange ticks top-to-bottom */
  justify-content: space-between; /* Distribute ticks evenly */
  width: 6px; /* How far the ticks extend horizontally */
  /* margin-left: 4px; /* Space between slider and ticks. The slider track is 8px wide, centered in a 20px input. Ticks are to the left. */
  /* For vertical-lr sliders written rtl, this will appear on the "start" side, which is visually left. */
  /* Let's try positioning it absolutely to the left of the slider's visual track */
  position: absolute;
  /* left: -10px; */ /* REMOVED: This was the base positioning, now handled by specific classes */
               /* (20px input width - 8px track width)/2 = 6px space on each side of track. */
               /* Position ticks just outside the input area. Input width is 20px. Ticks 6px wide. */
               /* If slider track is centered, its left edge is at (20-8)/2 = 6px from input edge. */
               /* We want ticks to be to the left of the track. */
  top: 0; /* Align with top of the slider's height */
  bottom: 0; /* Align with bottom of the slider's height */
  /* Height is dynamically set by [style.height]="sliderHeight" on this element in HTML */
  pointer-events: none; /* So it doesn't interfere with slider interaction */
}

.tick-marks-left {
  left: -10px; /* Position to the left of the slider input area */
}

.tick-marks-right {
  right: -10px; /* Position to the right of the slider input area */
  /* To make ticks draw from right to left (if width of container is for the lines) */
  /* If ticks are just points/short lines, align-items might be enough. */
  /* For now, assuming .tick-mark width:100% handles it. */
}

.tick-mark {
  width: 100%; /* Tick mark takes full width of its container (e.g., 6px) */
  height: 1px; /* Thickness of the tick mark */
  background-color: var(--slider-tick-color, #aaa); /* Default tick color */
}

.tick-mark-mid {
  height: 2px; /* Make the 50% tick thicker */
  background-color: var(--slider-tick-mid-color, #555); /* Darker/more prominent color for 50% tick */
}

/* Adjust dark theme variables for ticks */
:host-context(body.dark-theme) .tick-mark {
  background-color: var(--slider-tick-color-dark, #666);
}

:host-context(body.dark-theme) .tick-mark-mid {
  background-color: var(--slider-tick-mid-color-dark, #bbb);
}
