.app-header {
  display: flex;
  justify-content: flex-end; /* Changed from space-between to align icons to the right */
  align-items: center;
  padding: 10px 20px;
  background-color: var(--app-header-bg-color);
  border-bottom: 1px solid var(--app-border-color);
  margin-bottom: 15px;
  width: 100%;
  box-sizing: border-box;
}

/* Removed .app-header and .app-header h1 styles */

.header-icons { /* Now for fixed positioning */
  position: fixed;
  top: 10px;
  right: 10px;
  z-index: 1050; /* Ensure above most content, but below modals if they have higher z-index */
  display: flex;
  align-items: center;
  background-color: var(--fixed-icons-bg-color, rgba(255, 255, 255, 0.8)); /* Semi-transparent background */
  padding: 8px;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

/* Individual icon styling remains largely the same, but adjust margin if needed */
.settings-icon, .shortcuts-icon {
  font-size: 2em; /* Consistent icon size */
  cursor: pointer;
  color: var(--app-header-text-color);
  padding: 0 5px; /* Add some padding around icons */
  margin-left: 10px; /* Space between icons, and from the title if only one */
  border-radius: 4px; /* Optional: slight rounding for hover effect */
  transition: background-color 0.2s ease-in-out, opacity 0.2s;
}

.settings-icon:hover, .shortcuts-icon:hover {
  opacity: 0.7;
  /* Or a background highlight, depending on theme variables available */
  /* background-color: var(--app-header-hover-bg-color, #555); */ /* Example if such a var existed */
}

.shortcuts-icon {
  font-weight: bold; /* Make '?' more prominent if desired */
}

.main-layout {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  padding: 10px;
  padding-top: 70px; /* Added padding to prevent overlap with fixed header icons */
  box-sizing: border-box;
  background-color: var(--app-bg-color);
  color: var(--app-text-color);
}

.page-content {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  gap: 20px;
  width: 100%;
  max-width: 1200px;
  justify-content: center;
}

.sliders-area {
  display: flex;
  gap: 20px;
  align-items: center;
  box-sizing: border-box;
}

.channel-slider-rows {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

/* New styles for vertical labels and their wrappers */
.scene-row-wrapper {
  display: flex;
  align-items: center; /* Changed from stretch for better icon alignment */
}

.scene-label-container {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 25px; /* Width for the rotated text's container */
  margin-right: 5px; /* This provides space before the slider row, now that icon is gone */
  cursor: pointer; /* Make the label area clickable */
  user-select: none; /* Prevent text selection on label click */
  /* min-height: 100px; /* Let content (slider-row) define height of wrapper */
}

.scene-label {
  font-size: 1em;
  font-weight: bold;
  color: var(--app-text-color);
  white-space: nowrap;
  writing-mode: vertical-lr;
  transform: rotate(180deg); /* Rotate to read bottom-to-top, left-to-right */
  margin: 0; /* Reset margins */
  padding: 0;
  text-align: center; /* Center text along its vertical axis */
}

/* Removed old .channel-slider-rows > .scene-label:first-child as labels are now inside wrappers */

.slider-row {
  display: flex;
  gap: 0;
  justify-content: center;
  flex-grow: 1; /* Allow slider row to take available space */
}

.combined-output-row {
  display: flex;
  flex-wrap: nowrap;
  gap: 0;
  justify-content: center;
  margin: 8px 0; /* Add some vertical margin around combined output row */
  padding-left: 30px; /* Indent content to align with sliders (25px label width + 5px margin from .scene-label-container) */
  box-sizing: border-box; /* Ensure padding is included in width calculation */
}

.crossfader-column {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 10px; /* Add some gap between elements in the column */
}

.fader-container {
  display: flex; /* Arrange fader-wrapper elements (label + slider) side-by-side */
  justify-content: center;
  align-items: flex-start; /* Align tops of fader wrappers */
  gap: 15px; /* Space between the two fader sections */
  width: 100%; /* Allow container to span the width of crossfader-column */
}

.fader-wrapper {
  display: flex;
  flex-direction: column; /* Stack label on top of slider */
  align-items: center;
  gap: 5px; /* Space between label and slider */
}

.fader-label {
  font-size: 0.9em;
  font-weight: bold;
  color: var(--app-text-color);
  margin-bottom: 3px; /* Small space above the slider */
}

.link-faders-button {
  padding: 8px 12px;
  font-size: 0.9em;
  color: var(--button-secondary-text-color); /* Using secondary button colors for less emphasis than Go */
  background-color: var(--button-secondary-bg-color);
  border: 1px solid var(--button-secondary-border-color, transparent); /* Optional border */
  border-radius: 4px;
  cursor: pointer;
  margin-top: 10px; /* Ensure some space above it, now that it's at the bottom of the column */
  /* margin-bottom is not strictly necessary if it's the last item, or column gap handles it */
}

.link-faders-button:hover {
  background-color: var(--button-secondary-hover-bg-color);
}

.go-button {
  display: block;
  width: 80px;
  padding: 10px;
  margin-top: 15px;
  font-size: 1em;
  font-weight: bold;
  color: var(--button-primary-text-color);
  background-color: var(--button-primary-bg-color);
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.go-button:hover {
  background-color: var(--button-primary-hover-bg-color);
}

.go-button:disabled {
  background-color: var(--button-disabled-bg-color);
  color: var(--button-disabled-text-color);
  cursor: not-allowed;
}

.go-button.animating {
  background-color: var(--button-secondary-bg-color);
  color: var(--button-secondary-text-color);
  /* Ensure cursor remains pointer, it inherits by default */
}

.go-button.animating:hover {
  background-color: var(--button-secondary-hover-bg-color);
  color: var(--button-secondary-text-color);
}

.crossfade-slider-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 15px;
  width: 150px; /* Or adjust as needed */
}

.duration-slider-label {
  font-size: 0.8em;
  color: var(--app-text-color);
  margin-bottom: 5px;
}

input[type="range"].duration-slider {
  width: 100%;
  cursor: pointer;
  /* Basic reset for consistent appearance */
  -webkit-appearance: none;
  appearance: none;
  background: transparent; /* Otherwise it shows default track in some browsers */
}

/* Custom Track Styling */
input[type="range"].duration-slider::-webkit-slider-runnable-track {
  width: 100%;
  height: 8px;
  background: var(--slider-track-color, #ddd);
  border-radius: 4px;
  border: 1px solid var(--slider-track-border-color, #ccc);
}

input[type="range"].duration-slider::-moz-range-track {
  width: 100%;
  height: 8px;
  background: var(--slider-track-color, #ddd);
  border-radius: 4px;
  border: 1px solid var(--slider-track-border-color, #ccc);
}

/* Custom Thumb Styling */
input[type="range"].duration-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  margin-top: -7px; /* Recalculated: (track_height(8) - thumb_height(20)) / 2 = -6. Border might affect slightly. */
  width: 12px;  /* Narrower */
  height: 20px; /* Taller */
  background: var(--slider-thumb-color, #3498db);
  border-radius: 3px; /* Slightly rounded rectangle */
  box-shadow: 0 1px 2px rgba(0,0,0,0.1);
  /* Bevel border */
  border-width: 1px;
  border-style: solid;
  border-top-color: var(--slider-thumb-bevel-highlight);
  border-left-color: var(--slider-thumb-bevel-highlight);
  border-bottom-color: var(--slider-thumb-bevel-shadow);
  border-right-color: var(--slider-thumb-bevel-shadow);
}

input[type="range"].duration-slider::-moz-range-thumb {
  width: 12px;
  height: 20px;
  background: var(--slider-thumb-color, #3498db);
  border-radius: 3px; /* Slightly rounded rectangle */
  box-shadow: 0 1px 2px rgba(0,0,0,0.1);
  /* Bevel border */
  border-width: 1px;
  border-style: solid;
  border-top-color: var(--slider-thumb-bevel-highlight);
  border-left-color: var(--slider-thumb-bevel-highlight);
  border-bottom-color: var(--slider-thumb-bevel-shadow);
  border-right-color: var(--slider-thumb-bevel-shadow);
}

/* Dark Theme Adjustments for Slider */
:host-context(body.dark-theme) .duration-slider-label {
  color: var(--app-text-color, #ccc);
}

:host-context(body.dark-theme) input[type="range"].duration-slider::-webkit-slider-runnable-track {
  background: var(--slider-track-color-dark, #555);
  border-color: var(--slider-track-border-color-dark, #444);
}
:host-context(body.dark-theme) input[type="range"].duration-slider::-moz-range-track {
  background: var(--slider-track-color-dark, #555);
  border-color: var(--slider-track-border-color-dark, #444);
}

:host-context(body.dark-theme) input[type="range"].duration-slider::-webkit-slider-thumb {
  background: var(--slider-thumb-color-dark, #5dade2);
  border-color: var(--slider-thumb-border-color-dark, #4a90c2);
}
:host-context(body.dark-theme) input[type="range"].duration-slider::-moz-range-thumb {
  background: var(--slider-thumb-color-dark, #5dade2);
  border-color: var(--slider-thumb-border-color-dark, #4a90c2);
}

:host-context(body.dark-theme) .header-icons {
  background-color: var(--fixed-icons-bg-color-dark, rgba(40, 40, 40, 0.8));
  /* Text color for icons is already themed by --app-header-text-color,
     which should be updated or replaced if it was tied to old header bg */
}


/* Styles for Scene Text Input Feature */
/* .brain-icon class is removed */

.scene-text-input-wrapper {
  /* This wrapper will appear below a scene's slider row */
  margin-top: 10px;
  margin-bottom: 10px; /* Space before the next element (combined output or next scene) */
  padding: 10px;
  border: 1px solid var(--app-border-color);
  border-radius: 4px;
  background-color: var(--slider-host-bg-color); /* Use a similar bg as sliders for context */
  /* The wrapper should span similar width as slider rows, may need adjustments */
  /* If .channel-slider-rows is the parent, this will align left.
     Consider adding padding-left: 30px; box-sizing: border-box;
     if it needs to align with the content of combined-output-row and sliders.
     For now, let it be full width within its context. */
}

.scene-text-input {
  width: 100%;
  min-height: 60px; /* Roughly 3-4 lines */
  padding: 5px;
  box-sizing: border-box;
  border: 1px solid var(--modal-input-border-color); /* Use modal's input border */
  border-radius: 3px;
  font-family: monospace; /* Good for fixed-width-like input */
  background-color: var(--app-bg-color); /* Match app background for input field */
  color: var(--app-text-color); /* Match app text for input text */
  margin-bottom: 8px; /* Space before the apply button */
}

.scene-text-apply-button {
  padding: 8px 12px;
  font-size: 0.9em;
  color: var(--button-primary-text-color);
  background-color: var(--button-primary-bg-color);
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.scene-text-apply-button:hover {
  background-color: var(--button-primary-hover-bg-color);
}

.error-messages { /* This class was for the old inline error display, can be removed or repurposed if needed */
  margin-top: 8px;
  padding: 5px;
  /* background-color: var(--modal-error-text-color); /* A bit strong, maybe lighten this or use text color */
  /* color: var(--button-primary-text-color); /* Assuming error bg is dark enough for light text */
  border-radius: 3px;
  font-size: 0.9em;
}
.error-messages p {
  margin: 0 0 3px 0;
  padding: 0;
}
.error-messages p:last-child {
  margin-bottom: 0;
}

/* Cleaned up old comments regarding brain icon positioning */
.scene-label-container {
  /* display: flex; align-items: center; justify-content: center; are existing and fine */
}

.scene-label {
 /* All existing styles for scene-label are fine. No margin-right needed as icon is gone. */
}

/* Removed .global-command-feedback styles as the element is removed */

/* Glass Theme Specific Enhancements */
/* Apply backdrop filter and other glass properties when glass-theme is active */
.glass-theme .modal-content {
  background-color: var(--glass-bg-color, rgba(255, 255, 255, 0.6)); /* Fallback if var not defined */
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px); /* For Safari */
  border: 1px solid var(--glass-border-color, rgba(200, 220, 255, 0.5));
  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37); /* Subtle shadow for depth */
  border-radius: 10px; /* Rounded corners complement glass typically */
}

/* Example for slider hosts if they should also be glass */
.glass-theme .app-slide-potentiometer { /* Targeting the host element of the slider component */
  background-color: var(--glass-bg-color, rgba(255, 255, 255, 0.6));
  backdrop-filter: blur(8px); /* Slightly less blur perhaps */
  -webkit-backdrop-filter: blur(8px);
  border: 1px solid var(--glass-border-color, rgba(200, 220, 255, 0.5));
  border-radius: 8px;
  padding: 10px; /* Ensure content isn't too close to edges */
  margin: 5px; /* Add some spacing around glassy elements */
}

/* Ensure the overlay for modals in glass theme doesn't obscure the effect too much */
.glass-theme .modal-overlay {
  background-color: var(--modal-overlay-bg-color, rgba(100, 150, 200, 0.3)); /* From glass.theme.css */
}


/* Media Queries for Responsive Design */

/* LCARS Theme Specific Structural Styles */
.lcars-theme body {
  font-family: var(--app-font-family, 'Antonio', 'Impact', 'Arial Narrow Bold', sans-serif);
  display: flex; /* Ensure body is flex for page-content to take height */
  flex-direction: column;
  min-height: 100vh;
}

.lcars-theme .main-layout {
  background-color: var(--app-bg-color); /* Should be black */
  flex-grow: 1;
  display: flex; /* for page-content alignment */
  padding-top: 20px; /* Reduced padding, header icons are separate */
}

.lcars-theme .page-content {
  background-color: var(--slider-host-bg-color); /* Dark panel background for the main content area */
  border: 3px solid var(--app-border-color);
  border-left: 15px solid var(--app-header-bg-color); /* Main LCARS sidebar accent */
  border-radius: 0;
  border-top-left-radius: 25px;
  border-bottom-left-radius: 25px;
  padding: 15px;
  width: 100%; /* Occupy available space within main-layout's max-width */
  max-width: 1200px; /* Keep max width consistent */
  margin: 0 auto; /* Center it if viewport is wider than max-width */
  box-shadow: -5px 0 15px rgba(0,0,0,0.3) inset; /* Inner shadow for depth from the 'sidebar' */
}

/* Remove the ::before attempt from individual areas if page-content provides the main frame */
.lcars-theme .sliders-area::before,
.lcars-theme .scene-row-wrapper::before {
  display: none; /* Disable the old problematic elbows */
}

.lcars-theme .button-primary,
.lcars-theme .button-secondary,
.lcars-theme .go-button,
.lcars-theme .link-faders-button,
.lcars-theme .scene-text-apply-button {
  border-radius: 0; /* LCARS buttons are typically rectangular */
  border-top-left-radius: 15px; /* Rounded on one side - classic LCARS button */
  border-bottom-left-radius: 15px;
  border: 2px solid var(--app-header-text-color, #000000); /* Border color matching text */
  padding: 8px 15px;
  text-transform: uppercase;
  font-weight: bold;
  min-height: 30px; /* Ensure a minimum height */
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: var(--app-font-family); /* Ensure LCARS buttons use the LCARS font */
}

.lcars-theme .button-primary {
  background-color: var(--button-primary-bg-color, #CC66FF);
  color: var(--button-primary-text-color, #000000);
}
.lcars-theme .button-primary:hover {
  background-color: var(--button-primary-hover-bg-color, #9933CC);
}

.lcars-theme .button-secondary {
  background-color: var(--button-secondary-bg-color, #FF6600);
  color: var(--button-secondary-text-color, #000000);
}
.lcars-theme .button-secondary:hover {
  background-color: var(--button-secondary-hover-bg-color, #CC3300);
}

/* Specific styling for GO button if it needs to be different */
.lcars-theme .go-button {
  border-radius: 15px; /* Go button might be fully rounded or oval in some LCARS */
  /* Override if it needs to be different from the general LCARS button style */
}


/* Styling for sub-panels within the main LCARS page-content */
.lcars-theme .sliders-area,
.lcars-theme .channel-slider-rows, /* Grouping for scene rows */
.lcars-theme .crossfader-column,
.lcars-theme .scene-text-input-wrapper {
  background-color: #000000; /* Black background for sub-panels */
  border: 2px solid var(--app-border-color);
  border-left: 10px solid var(--button-secondary-bg-color); /* Accent left border */
  padding: 10px;
  margin-bottom: 15px;
  border-radius: 0;
  border-top-right-radius: 10px; /* Slight rounding on one corner */
  border-bottom-right-radius: 10px;
}

/* Individual scene-row-wrapper within channel-slider-rows */
.lcars-theme .scene-row-wrapper {
  padding: 5px 0;
  margin-bottom: 5px;
  border: none; /* Remove individual border, parent .channel-slider-rows has it */
  background-color: transparent;
}

.lcars-theme .slider-row {
  padding-left: 5px; /* Indent sliders slightly from the accent border of parent */
}

.lcars-theme .combined-output-row {
  margin: 10px 0 15px 0;
  padding-left: 10px; /* Align with other indented content */
  border-left: 5px solid var(--button-secondary-bg-color);
  padding-top: 5px;
  padding-bottom: 5px;
}

/* Scene labels to look like LCARS tabs/labels */
.lcars-theme .scene-label-container {
  background-color: var(--button-secondary-bg-color); /* Use an accent color */
  color: var(--button-secondary-text-color);
  padding: 10px 5px;
  margin-right: 8px;
  border-radius: 0;
  border-top-left-radius: 10px;
  border-bottom-left-radius: 10px;
  width: auto; /* Adjust width based on content */
  min-width: 25px; /* Ensure minimum width for rotated text */
}
.lcars-theme .scene-label {
  color: var(--button-secondary-text-color); /* Ensure text color matches */
  font-size: 0.9em; /* Slightly smaller for tab look */
}


/* Style for header icons in LCARS */
.lcars-theme .header-icons {
  background-color: var(--app-header-bg-color); /* LCARS Orange */
  border: 2px solid var(--app-header-text-color); /* Black border */
  border-right: none;
  border-radius: 0;
  border-top-left-radius: 15px;
  border-bottom-left-radius: 15px;
  padding: 8px 10px 8px 15px;
  box-shadow: -2px 2px 5px rgba(0,0,0,0.5);
  right: 0; /* Ensure it's flush right */
  top: 15px; /* Adjust vertical position */
}
.lcars-theme .settings-icon,
.lcars-theme .shortcuts-icon {
  color: var(--app-header-text-color);
  font-size: 1.8em;
}

/* LCARS styling for Modals */
.lcars-theme .modal-overlay {
  /* Overlay color is already themed via variable */
}
.lcars-theme .modal-content {
  background-color: var(--modal-bg-color); /* Usually dark blue/black */
  color: var(--modal-text-color);
  border: 3px solid var(--app-border-color);
  border-left: 10px solid var(--app-header-bg-color); /* Prominent orange left bar */
  border-radius: 0;
  border-top-left-radius: 20px;
  border-bottom-left-radius: 20px;
  border-top-right-radius: 10px; /* Subtle rounding on other side */
  border-bottom-right-radius: 10px;
  padding: 20px;
  box-shadow: 0 5px 25px rgba(0,0,0,0.5);
}
.lcars-theme .modal-content h2 {
  color: var(--app-header-bg-color); /* Orange for modal titles */
  text-align: left;
  padding-bottom: 10px;
  border-bottom: 2px solid var(--app-header-bg-color);
  margin-bottom: 20px;
}
.lcars-theme .form-group label {
  color: var(--app-text-color); /* Orange text for labels */
}
.lcars-theme .form-group input[type="text"],
.lcars-theme .form-group input[type="number"],
.lcars-theme .form-group input[type="url"],
.lcars-theme .scene-text-input { /* Apply to scene text input as well */
  background-color: #000; /* Black input fields */
  color: var(--app-text-color);
  border: 1px solid var(--app-border-color);
  border-radius: 0; /* Sharp corners for inputs */
  padding: 8px;
}

/* LCARS styling for Sliders (app-slide-potentiometer) */
/* This requires selecting the host and potentially its internal parts if accessible,
   or relying on CSS variables passed down to the component.
   Assuming .app-slide-potentiometer is the host element. */
.lcars-theme .app-slide-potentiometer {
  background-color: #000; /* Black background for slider component */
  border: 1px solid var(--slider-host-border-color);
  padding: 8px;
  border-radius: 0;
  border-top-left-radius: 10px;
  border-bottom-left-radius: 10px;
  margin: 2px; /* Small margin around each slider */
}
/* Further specific styling for track and thumb would ideally be done
   within slide-potentiometer.css using LCARS theme variables if possible.
   For now, we rely on the variables set in lcars.theme.css:
   --slider-track-color, --slider-track-border-color, --slider-thumb-color
   These should make tracks dark purple/blue and thumbs lighter orange.
   To make them more "blocky" for LCARS, the component's own CSS would need adjustment
   or more specific variables for border-radius of thumb/track.
*/

/* Styling for the crossfade duration slider */
.lcars-theme input[type="range"].duration-slider::-webkit-slider-runnable-track {
  background: var(--slider-track-color);
  border: 1px solid var(--slider-track-border-color);
  border-radius: 0; /* Sharp track */
  height: 10px;
}
.lcars-theme input[type="range"].duration-slider::-moz-range-track {
  background: var(--slider-track-color);
  border: 1px solid var(--slider-track-border-color);
  border-radius: 0; /* Sharp track */
  height: 10px;
}
.lcars-theme input[type="range"].duration-slider::-webkit-slider-thumb {
  background: var(--slider-thumb-color);
  border: 1px solid var(--app-header-text-color); /* Black border for thumb */
  border-radius: 0; /* Sharp thumb */
  width: 10px;
  height: 22px; /* Taller, thinner thumb */
  margin-top: -7px; /* Adjust vertical position */
}
.lcars-theme input[type="range"].duration-slider::-moz-range-thumb {
  background: var(--slider-thumb-color);
  border: 1px solid var(--app-header-text-color);
  border-radius: 0;
  width: 10px;
  height: 22px;
}


/* Small devices (phones, less than 768px) */
@media (max-width: 767.98px) {
  .page-content {
    flex-direction: column;
    align-items: center; /* Center items when stacked */
  }

  .sliders-area {
    flex-direction: column;
    align-items: center; /* Center sliders and crossfader column */
    width: 100%; /* Allow sliders area to take full width */
  }

  .channel-slider-rows {
    width: 100%; /* Ensure slider rows take full width */
    align-items: center; /* Center content if not already */
  }

  .scene-row-wrapper {
    flex-direction: column; /* Stack label and sliders vertically */
    align-items: center;
    width: 100%; /* Take full width */
    margin-bottom: 15px; /* Add some space between scene rows */
  }

  .scene-label-container {
    width: auto; /* Allow label container to adjust */
    margin-right: 0; /* Remove right margin */
    margin-bottom: 5px; /* Add space below label */
  }

  .scene-label {
    writing-mode: horizontal-tb; /* Horizontal text */
    transform: none; /* Remove rotation */
    font-size: 1.2em; /* Slightly larger for readability */
  }

  .slider-row {
    justify-content: center; /* Center sliders in the row */
    flex-wrap: wrap; /* Allow sliders to wrap if needed */
    /* Assuming app-slide-potentiometer has a fixed width, wrapping will occur.
       If they are flex items, they might shrink. Consider min-width on them if an issue. */
  }

  .combined-output-row {
    padding-left: 0; /* Remove padding, align with centered content */
    justify-content: center; /* Center combined output displays */
    flex-wrap: wrap; /* Allow wrapping */
  }

  .crossfader-column {
    width: 100%; /* Full width for crossfader elements */
    margin-top: 20px; /* Add space above crossfader section */
  }

  .fader-container {
    justify-content: space-around; /* Space out faders if horizontal space allows */
    width: 100%;
  }

  /* Adjustments for header icons if they become too crowded or hard to tap */
  .header-icons {
    padding: 5px;
    top: 5px;
    right: 5px;
  }
  .settings-icon, .shortcuts-icon {
    font-size: 1.8em; /* Slightly smaller if needed */
    margin-left: 5px;
  }

  .main-layout {
    padding-top: 60px; /* Adjust if header icons height changed */
  }
}

/* Medium devices (tablets, 768px and up) */
@media (min-width: 768px) and (max-width: 991.98px) {
  .page-content {
    /* May not need changes if desktop layout is mostly fine,
       but could adjust gaps or specific element widths if needed. */
  }

  .sliders-area {
    /* Could allow wrapping or adjust gap if too wide */
    /* flex-wrap: wrap; */ /* Example if needed */
    /* justify-content: center; */
  }

  /* Example: reduce gap between sliders if they are too spaced out */
  .slider-row {
    gap: 0px; /* Or a smaller value than default */
  }
   .combined-output-row {
    gap: 0px;
  }

  /* Ensure faders are reasonably sized */
  .fader-container {
    gap: 10px; /* Reduce gap if too wide */
  }
}

/* Large devices (desktops, 992px and up) */
/* Styles for .page-content, .sliders-area, etc., are already defined
   for this range by default (styles outside media queries). */

/* Extra large devices (large desktops, 1200px and up) */
/* .page-content already has max-width: 1200px, so it's constrained.
   No specific changes usually needed here unless elements within become too sparse. */
