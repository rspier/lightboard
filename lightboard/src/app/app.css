.app-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  background-color: var(--app-header-bg-color);
  border-bottom: 1px solid var(--app-border-color);
  margin-bottom: 15px;
  width: 100%;
  box-sizing: border-box;
}

.app-header h1 {
  margin: 0;
  font-size: 1.5em;
  color: var(--app-header-text-color);
}

.settings-icon {
  font-size: 2em;
  cursor: pointer;
  color: var(--app-header-text-color);
}
.settings-icon:hover {
  opacity: 0.7;
}

.main-layout {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  padding: 10px;
  box-sizing: border-box;
  background-color: var(--app-bg-color);
  color: var(--app-text-color);
}

.page-content {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  gap: 20px;
  width: 100%;
  max-width: 1200px;
  justify-content: center;
}

.sliders-area {
  display: flex;
  gap: 20px;
  align-items: center;
  box-sizing: border-box;
}

.channel-slider-rows {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

/* New styles for vertical labels and their wrappers */
.scene-row-wrapper {
  display: flex;
  align-items: stretch; /* Make label container and slider row same height */
}

.scene-label-container {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 25px; /* Width for the rotated text's container */
  margin-right: 5px; /* Space between rotated label and slider row */
  /* min-height: 100px; /* Let content (slider-row) define height of wrapper */
}

.scene-label {
  font-size: 1em;
  font-weight: bold;
  color: var(--app-text-color);
  white-space: nowrap;
  writing-mode: vertical-lr;
  transform: rotate(180deg); /* Rotate to read bottom-to-top, left-to-right */
  margin: 0; /* Reset margins */
  padding: 0;
  text-align: center; /* Center text along its vertical axis */
}

/* Removed old .channel-slider-rows > .scene-label:first-child as labels are now inside wrappers */

.slider-row {
  display: flex;
  gap: 0;
  justify-content: center;
  flex-grow: 1; /* Allow slider row to take available space */
}

.combined-output-row {
  display: flex;
  flex-wrap: nowrap;
  gap: 0;
  justify-content: center;
  margin: 8px 0; /* Add some vertical margin around combined output row */
}

.crossfader-column {
  display: flex;
  flex-direction: column;
  align-items: center;
  /* align-self: stretch; /* Make crossfader column same height as channel-slider-rows */
  /* This might need adjustment depending on the desired vertical alignment of the crossfader itself. */
}

.go-button {
  display: block;
  width: 80px;
  padding: 10px;
  margin-top: 15px;
  font-size: 1em;
  font-weight: bold;
  color: var(--button-primary-text-color);
  background-color: var(--button-primary-bg-color);
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.go-button:hover {
  background-color: var(--button-primary-hover-bg-color);
}

.go-button:disabled {
  background-color: var(--button-disabled-bg-color);
  color: var(--button-disabled-text-color);
  cursor: not-allowed;
}
