.app-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  background-color: var(--app-header-bg-color);
  border-bottom: 1px solid var(--app-border-color);
  margin-bottom: 15px;
  width: 100%;
  box-sizing: border-box;
}

.app-header h1 {
  margin: 0;
  font-size: 1.5em;
  color: var(--app-header-text-color);
}

.header-icons {
  display: flex;
  align-items: center;
}

.settings-icon, .shortcuts-icon {
  font-size: 2em; /* Consistent icon size */
  cursor: pointer;
  color: var(--app-header-text-color);
  padding: 0 5px; /* Add some padding around icons */
  margin-left: 10px; /* Space between icons, and from the title if only one */
  border-radius: 4px; /* Optional: slight rounding for hover effect */
  transition: background-color 0.2s ease-in-out, opacity 0.2s;
}

.settings-icon:hover, .shortcuts-icon:hover {
  opacity: 0.7;
  /* Or a background highlight, depending on theme variables available */
  /* background-color: var(--app-header-hover-bg-color, #555); */ /* Example if such a var existed */
}

.shortcuts-icon {
  font-weight: bold; /* Make '?' more prominent if desired */
}

.main-layout {
  display: flex;
  flex-direction: column;
  align-items: center;
  width: 100%;
  padding: 10px;
  box-sizing: border-box;
  background-color: var(--app-bg-color);
  color: var(--app-text-color);
}

.page-content {
  display: flex;
  flex-direction: row;
  align-items: flex-start;
  gap: 20px;
  width: 100%;
  max-width: 1200px;
  justify-content: center;
}

.sliders-area {
  display: flex;
  gap: 20px;
  align-items: center;
  box-sizing: border-box;
}

.channel-slider-rows {
  display: flex;
  flex-direction: column;
  gap: 8px;
}

/* New styles for vertical labels and their wrappers */
.scene-row-wrapper {
  display: flex;
  align-items: center; /* Changed from stretch for better icon alignment */
}

.scene-label-container {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 25px; /* Width for the rotated text's container */
  margin-right: 5px; /* This provides space before the slider row, now that icon is gone */
  cursor: pointer; /* Make the label area clickable */
  user-select: none; /* Prevent text selection on label click */
  /* min-height: 100px; /* Let content (slider-row) define height of wrapper */
}

.scene-label {
  font-size: 1em;
  font-weight: bold;
  color: var(--app-text-color);
  white-space: nowrap;
  writing-mode: vertical-lr;
  transform: rotate(180deg); /* Rotate to read bottom-to-top, left-to-right */
  margin: 0; /* Reset margins */
  padding: 0;
  text-align: center; /* Center text along its vertical axis */
}

/* Removed old .channel-slider-rows > .scene-label:first-child as labels are now inside wrappers */

.slider-row {
  display: flex;
  gap: 0;
  justify-content: center;
  flex-grow: 1; /* Allow slider row to take available space */
}

.combined-output-row {
  display: flex;
  flex-wrap: nowrap;
  gap: 0;
  justify-content: center;
  margin: 8px 0; /* Add some vertical margin around combined output row */
  padding-left: 30px; /* Indent content to align with sliders (25px label width + 5px margin from .scene-label-container) */
  box-sizing: border-box; /* Ensure padding is included in width calculation */
}

.crossfader-column {
  display: flex;
  flex-direction: column;
  align-items: center;
  /* align-self: stretch; /* Make crossfader column same height as channel-slider-rows */
  /* This might need adjustment depending on the desired vertical alignment of the crossfader itself. */
}

.go-button {
  display: block;
  width: 80px;
  padding: 10px;
  margin-top: 15px;
  font-size: 1em;
  font-weight: bold;
  color: var(--button-primary-text-color);
  background-color: var(--button-primary-bg-color);
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.go-button:hover {
  background-color: var(--button-primary-hover-bg-color);
}

.go-button:disabled {
  background-color: var(--button-disabled-bg-color);
  color: var(--button-disabled-text-color);
  cursor: not-allowed;
}

.go-button.animating {
  background-color: var(--button-secondary-bg-color);
  color: var(--button-secondary-text-color);
  /* Ensure cursor remains pointer, it inherits by default */
}

.go-button.animating:hover {
  background-color: var(--button-secondary-hover-bg-color);
  color: var(--button-secondary-text-color);
}

.crossfade-duration-dial {
  margin-top: 15px; /* Space below the Go button */
  /* The rotary dial component itself has a fixed width,
     so it will be centered by align-items: center on crossfader-column */
}

/* Styles for Scene Text Input Feature */
/* .brain-icon class is removed */

.scene-text-input-wrapper {
  /* This wrapper will appear below a scene's slider row */
  margin-top: 10px;
  margin-bottom: 10px; /* Space before the next element (combined output or next scene) */
  padding: 10px;
  border: 1px solid var(--app-border-color);
  border-radius: 4px;
  background-color: var(--slider-host-bg-color); /* Use a similar bg as sliders for context */
  /* The wrapper should span similar width as slider rows, may need adjustments */
  /* If .channel-slider-rows is the parent, this will align left.
     Consider adding padding-left: 30px; box-sizing: border-box;
     if it needs to align with the content of combined-output-row and sliders.
     For now, let it be full width within its context. */
}

.scene-text-input {
  width: 100%;
  min-height: 60px; /* Roughly 3-4 lines */
  padding: 5px;
  box-sizing: border-box;
  border: 1px solid var(--modal-input-border-color); /* Use modal's input border */
  border-radius: 3px;
  font-family: monospace; /* Good for fixed-width-like input */
  background-color: var(--app-bg-color); /* Match app background for input field */
  color: var(--app-text-color); /* Match app text for input text */
  margin-bottom: 8px; /* Space before the apply button */
}

.scene-text-apply-button {
  padding: 8px 12px;
  font-size: 0.9em;
  color: var(--button-primary-text-color);
  background-color: var(--button-primary-bg-color);
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

.scene-text-apply-button:hover {
  background-color: var(--button-primary-hover-bg-color);
}

.error-messages { /* This class was for the old inline error display, can be removed or repurposed if needed */
  margin-top: 8px;
  padding: 5px;
  /* background-color: var(--modal-error-text-color); /* A bit strong, maybe lighten this or use text color */
  /* color: var(--button-primary-text-color); /* Assuming error bg is dark enough for light text */
  border-radius: 3px;
  font-size: 0.9em;
}
.error-messages p {
  margin: 0 0 3px 0;
  padding: 0;
}
.error-messages p:last-child {
  margin-bottom: 0;
}

/* Cleaned up old comments regarding brain icon positioning */
.scene-label-container {
  /* display: flex; align-items: center; justify-content: center; are existing and fine */
}

.scene-label {
 /* All existing styles for scene-label are fine. No margin-right needed as icon is gone. */
}

/* Removed .global-command-feedback styles as the element is removed */
